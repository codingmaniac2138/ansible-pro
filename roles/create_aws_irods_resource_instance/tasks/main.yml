- name: Create iRODS resource servers on AWS
  ec2:
    region: "{{ item.name }}"
    image: "{{ region_ami_map[item.name] }}"
    instance_type: "{{ irods.resource.aws.instance_type }}"
    assign_public_ip: yes
    key_name: "{{ ansible_ssh_user }}"
    vpc_subnet_id: "{{ vpc_subnet_map[region_vpc_map[item.name]] }}"
    count_tag:
      Name: "{{ prefix }}-irods-resource-{{ item.name }}"
    instance_tags:
      Name: "{{ prefix }}-irods-resource-{{ item.name }}"
    exact_count: "{{ item.count.irods }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ irods.resource.disk_size }}"
        delete_on_termination: true
  when: region.gcp and install.irods
  with_items: "{{ region.aws }}"
  register: aws_irods_resource
  ignore_errors: true
  until: >
    'tagged_instances' in aws_irods_resource
    and aws_irods_resource.tagged_instances.0.public_ip
  retries: "{{ max_retries }}"

- name: Assign AWS iRODS resource to groups
  add_host:
    hostname: "{{ item.1.public_ip }}"
    groupname:
      - aws
      - common
      - irods_common
      - irods_resource
  with_subelements:
    - "{{ aws_irods_resource.results }}"
    - tagged_instances
  when: region.gcp and install.irods
